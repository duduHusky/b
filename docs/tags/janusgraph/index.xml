<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>janusgraph on duduHusky</title>
    <link>https://duduhusky.github.io/tags/janusgraph/</link>
    <description>Recent content in janusgraph on duduHusky</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Mar 2020 14:39:59 +0800</lastBuildDate><atom:link href="https://duduhusky.github.io/tags/janusgraph/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JanusGraph使用笔记</title>
      <link>https://duduhusky.github.io/2020/janusgraph-study/</link>
      <pubDate>Thu, 05 Mar 2020 14:39:59 +0800</pubDate>
      
      <guid>https://duduhusky.github.io/2020/janusgraph-study/</guid>
      <description>下载源码文件(如果你使用Docker也是可以的) 下载地址
解压下载的文件夹, 比如: janusgraph-0.4.1-hadoop2.zip 配置 例如：存储后端使用 Cassandra, 索引使用es,修改janusgraph-cql-es.properties vim janusgraph-0.4.1-hadoop2/conf/janusgraph-cql-es.properties
配置文件重点内容 #storage.hostname=这个地方要配置Cassandra的地址storage.hostname=host:port# ES服务的节点地址及端口index.search.hostname=mhostname1:9200,hostname2:9200,hostname3:9200&amp;lt;i&amp;gt;命令行执行bin/gremlin.sh 初始化完成后执行graph = JanusGraphFactory.open(&#39;conf/janusgraph-cql-es.properties&#39;)
 配置文件路径写自己机器上的位置
 创建顶点标签 mgmt = graph.openManagement();mgmt.makeVertexLabel(&#39;person&#39;).make();mgmt.makeVertexLabel(&#39;country&#39;).make();mgmt.makeVertexLabel(&#39;weapon&#39;).make();mgmt.getVertexLabels();mgmt.commit()创建边标签 mgmt = graph.openManagement();brother = mgmt.makeEdgeLabel(&amp;quot;brother&amp;quot;).make();mgmt.makeEdgeLabel(&amp;quot;battled&amp;quot;).make();mgmt.makeEdgeLabel(&amp;quot;belongs&amp;quot;).make();mgmt.makeEdgeLabel(&amp;quot;use&amp;quot;).make();mgmt.getRelationTypes(EdgeLabel.class);mgmt.commit()创建属性 mgmt = graph.openManagement();name = mgmt.makePropertyKey(&#39;name&#39;).dataType(String.class).cardinality(Cardinality.SET).make();mgmt.buildIndex(&#39;nameUnique&#39;, Vertex.class).addKey(name).unique().buildCompositeIndex();age = mgmt.makePropertyKey(&amp;quot;age&amp;quot;).dataType(Integer.class).make();mgmt.buildIndex(&#39;age2&#39;, Vertex.class).addKey(age).buildMixedIndex(&amp;quot;sanguo&amp;quot;);mgmt.getGraphIndexes(Vertex.class);mgmt.commit()&amp;lt;i&amp;gt;添加顶点 g = graph.traversal()liubei = g.addV(&amp;quot;person&amp;quot;).property(&#39;name&#39;,&#39;刘备&#39;).property(&#39;age&#39;,45);guanyu = g.</description>
    </item>
    
  </channel>
</rss>
