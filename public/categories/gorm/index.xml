<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gorm on duduHusky</title>
    <link>https://duduhusky.com/categories/gorm/</link>
    <description>Recent content in Gorm on duduHusky</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Dec 2019 14:51:47 +0800</lastBuildDate>
    
	<atom:link href="https://duduhusky.com/categories/gorm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gorm返回的JSON里时间格式</title>
      <link>https://duduhusky.com/2019/grom-datetime-format/</link>
      <pubDate>Fri, 13 Dec 2019 14:51:47 +0800</pubDate>
      
      <guid>https://duduhusky.com/2019/grom-datetime-format/</guid>
      <description>Golang中使用gorm时，通过加入gorm.Model到自己的struct来定义一个model。 Gorm是这样定义的：
type Model struct { ID uint `gorm:&amp;#34;primary_key&amp;#34;` CreatedAt time.Time UpdatedAt time.Time } 当我们的API在接收到查询请求时返回一个model通过JSON形式返回给客户端，这时类型为time.Time的字段就会默认以RFC3339的格式返回，所有的这类字段的返回值都固定是2006-01-02T15:04:05.999999999Z07:00这种格式
const ( ANSIC = &amp;#34;Mon Jan _2 15:04:05 2006&amp;#34; UnixDate = &amp;#34;Mon Jan _2 15:04:05 MST 2006&amp;#34; RubyDate = &amp;#34;Mon Jan 02 15:04:05 -0700 2006&amp;#34; RFC822 = &amp;#34;02 Jan 06 15:04 MST&amp;#34; RFC822Z = &amp;#34;02 Jan 06 15:04 -0700&amp;#34; // RFC822 with numeric zone  RFC850 = &amp;#34;Monday, 02-Jan-06 15:04:05 MST&amp;#34; RFC1123 = &amp;#34;Mon, 02 Jan 2006 15:04:05 MST&amp;#34; RFC1123Z = &amp;#34;Mon, 02 Jan 2006 15:04:05 -0700&amp;#34; // RFC1123 with numeric zone  RFC3339 = &amp;#34;2006-01-02T15:04:05Z07:00&amp;#34; RFC3339Nano = &amp;#34;2006-01-02T15:04:05.</description>
    </item>
    
  </channel>
</rss>